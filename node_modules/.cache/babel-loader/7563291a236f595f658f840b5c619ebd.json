{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fenjer\\\\Programming\\\\HTML-CSS-JS\\\\Projects\\\\react-complete-guide\\\\react-complete-guide-food-ordering\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  let updatedTotalAmount, updatedItem, updatedItems, existingCartItem, existingCartItemIndex;\n\n  switch (action.type) {\n    case \"ADD\":\n      existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      existingCartItem = state.items[existingCartItemIndex];\n      updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n      if (existingCartItem) {\n        // if the new item is already in the list\n        updatedItem = { ...existingCartItem,\n          amount: existingCartItem.amount + action.item.amount\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n        updatedItems = state.items.concat(action.item);\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case \"REMOVE\":\n      existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      existingCartItem = state.items[existingCartItemIndex];\n      updatedTotalAmount = state.totalAmount - existingCartItem.price;\n      updatedItem = { ...existingCartItem,\n        amount: --existingCartItem.amount\n      };\n      updatedItems[existingCartItemIndex] = updatedItem;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    default:\n      return defaultCartState;\n  }\n}\n\nexport default function CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(_item) {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: _item\n    });\n  }\n\n  function removeItemFromCartHandler(_id) {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: _id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-complete-guide-food-ordering/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","updatedTotalAmount","updatedItem","updatedItems","existingCartItem","existingCartItemIndex","type","findIndex","item","id","price","amount","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","_item","removeItemFromCartHandler","_id","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nfunction cartReducer(state, action) {\r\n  let updatedTotalAmount,\r\n    updatedItem,\r\n    updatedItems,\r\n    existingCartItem,\r\n    existingCartItemIndex;\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      existingCartItem = state.items[existingCartItemIndex];\r\n      updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n\r\n      if (existingCartItem) {\r\n        // if the new item is already in the list\r\n        updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.item.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.item);\r\n      }\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    case \"REMOVE\":\r\n      existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n      existingCartItem = state.items[existingCartItemIndex];\r\n      updatedTotalAmount = state.totalAmount - existingCartItem.price;\r\n\r\n      updatedItem = { ...existingCartItem, amount: --existingCartItem.amount };\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n\r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    default:\r\n      return defaultCartState;\r\n  }\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  function addItemToCartHandler(_item) {\r\n    dispatchCartAction({ type: \"ADD\", item: _item });\r\n  }\r\n\r\n  function removeItemFromCartHandler(_id) {\r\n    dispatchCartAction({ type: \"REMOVE\", id: _id });\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}