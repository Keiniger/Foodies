{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fenjer\\\\Programming\\\\HTML-CSS-JS\\\\Projects\\\\react-complete-guide\\\\react-complete-guide-food-ordering\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD\":\n      const updatedItems = state.items.concat(action.item);\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n\n    case \"REMOVE\":\n      break;\n\n    default:\n      return defaultCartState;\n  }\n}\n\nexport default function CartProvider(props) {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  function addItemToCartHandler(_item) {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: _item\n    });\n  }\n\n  function removeItemFromCartHandler(_id) {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: _id\n    });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Fenjer/Programming/HTML-CSS-JS/Projects/react-complete-guide/react-complete-guide-food-ordering/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","_item","removeItemFromCartHandler","_id","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,YAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,YAAMC,kBAAkB,GACtBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,aAAO;AACHX,QAAAA,KAAK,EAAEM,YADJ;AAEHL,QAAAA,WAAW,EAAEQ;AAFV,OAAP;;AAIF,SAAK,QAAL;AACE;;AACF;AACE,aAAOV,gBAAP;AAZJ;AAcD;;AAED,eAAe,SAASa,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,WAASiB,oBAAT,CAA8BC,KAA9B,EAAqC;AACnCF,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAES;AAArB,KAAD,CAAlB;AACD;;AAED,WAASC,yBAAT,CAAmCC,GAAnC,EAAwC;AACtCJ,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBe,MAAAA,EAAE,EAAED;AAAtB,KAAD,CAAlB;AACD;;AAED,QAAME,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEc,SAAS,CAACd,KADC;AAElBC,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFL;AAGlBqB,IAAAA,OAAO,EAAEN,oBAHS;AAIlBO,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,WAA7B;AAAA,cACGR,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA1BuBZ,Y;;KAAAA,Y","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nfunction cartReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      const updatedItems = state.items.concat(action.item);\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n      return {\r\n          items: updatedItems,\r\n          totalAmount: updatedTotalAmount\r\n      };\r\n    case \"REMOVE\":\r\n      break;\r\n    default:\r\n      return defaultCartState;\r\n  }\r\n}\r\n\r\nexport default function CartProvider(props) {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  function addItemToCartHandler(_item) {\r\n    dispatchCartAction({ type: \"ADD\", item: _item });\r\n  }\r\n\r\n  function removeItemFromCartHandler(_id) {\r\n    dispatchCartAction({ type: \"REMOVE\", id: _id });\r\n  }\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}